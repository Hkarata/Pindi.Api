// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pindi.Api.Data;

#nullable disable

namespace Pindi.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AcademicYearCourse", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("CoursesCode")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AcademicYearId", "CoursesCode");

                    b.HasIndex("CoursesCode");

                    b.ToTable("AcademicYearCourse");
                });

            modelBuilder.Entity("CourseDegreeProgram", b =>
                {
                    b.Property<string>("CoursesCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DegreeProgramId")
                        .HasColumnType("int");

                    b.HasKey("CoursesCode", "DegreeProgramId");

                    b.HasIndex("DegreeProgramId");

                    b.ToTable("CourseDegreeProgram");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<string>("EnrolledCoursesCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StudentsRegistrationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EnrolledCoursesCode", "StudentsRegistrationNumber");

                    b.HasIndex("StudentsRegistrationNumber");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("Pindi.Api.Models.AcademicYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Year")
                        .IsUnique();

                    b.ToTable("AcademicYears");
                });

            modelBuilder.Entity("Pindi.Api.Models.Course", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrollmentKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LecturerStaffNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Code");

                    b.HasIndex("EnrollmentKey")
                        .IsUnique();

                    b.HasIndex("LecturerStaffNumber");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Pindi.Api.Models.DegreeProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DegreePrograms");
                });

            modelBuilder.Entity("Pindi.Api.Models.Lecturer", b =>
                {
                    b.Property<string>("StaffNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StaffNumber");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("lecturers");
                });

            modelBuilder.Entity("Pindi.Api.Models.Student", b =>
                {
                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("RegistrationNumber");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ProgramId");

                    b.HasIndex("YearId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Pindi.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<bool>("Role")
                        .HasColumnType("bit");

                    b.Property<string>("lecturerStaffNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("studentRegistrationNumber")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("lecturerStaffNumber");

                    b.HasIndex("studentRegistrationNumber");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AcademicYearCourse", b =>
                {
                    b.HasOne("Pindi.Api.Models.AcademicYear", null)
                        .WithMany()
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindi.Api.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseDegreeProgram", b =>
                {
                    b.HasOne("Pindi.Api.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindi.Api.Models.DegreeProgram", null)
                        .WithMany()
                        .HasForeignKey("DegreeProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("Pindi.Api.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("EnrolledCoursesCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindi.Api.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsRegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pindi.Api.Models.Course", b =>
                {
                    b.HasOne("Pindi.Api.Models.Lecturer", "Lecturer")
                        .WithMany("Courses")
                        .HasForeignKey("LecturerStaffNumber");

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("Pindi.Api.Models.Student", b =>
                {
                    b.HasOne("Pindi.Api.Models.DegreeProgram", "Program")
                        .WithMany("Students")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pindi.Api.Models.AcademicYear", "Year")
                        .WithMany("Students")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("Pindi.Api.Models.User", b =>
                {
                    b.HasOne("Pindi.Api.Models.Lecturer", "lecturer")
                        .WithMany()
                        .HasForeignKey("lecturerStaffNumber");

                    b.HasOne("Pindi.Api.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentRegistrationNumber");

                    b.Navigation("lecturer");

                    b.Navigation("student");
                });

            modelBuilder.Entity("Pindi.Api.Models.AcademicYear", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Pindi.Api.Models.DegreeProgram", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Pindi.Api.Models.Lecturer", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
